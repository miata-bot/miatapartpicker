use Mix.Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.

secret_key_base =
  System.get_env("SECRET_KEY_BASE") ||
    raise """
    environment variable SECRET_KEY_BASE is missing.
    You can generate one by calling: mix phx.gen.secret
    """

database_url =
  System.get_env("DATABASE_URL") ||
    raise """
    environment variable DATABASE_URL is missing.
    For example: ecto://USER:PASS@HOST/DATABASE
    """

discord_client_id =
  System.get_env("DISCORD_CLIENT_ID") ||
    raise """
    environment variable DISCORD_CLIENT_ID is missing.
    """

discord_client_secret =
  System.get_env("DISCORD_CLIENT_SECRET") ||
    raise """
    environment variable DISCORD_CLIENT_SECRET is missing.
    """

config :partpicker, PartpickerWeb.Endpoint,
  url: [scheme: "https", host: "miatapartpicker.gay", port: 443],
  http: [
    :inet6,
    port: String.to_integer(System.get_env("PORT") || 4000),
    transport_options: [socket_opts: [:inet6]]
  ],
  cache_static_manifest: "priv/static/cache_manifest.json",
  secret_key_base: secret_key_base,
  server: true,
  check_origin: false

config :logger, backends: [:console, RingLogger]

config :partpicker, Partpicker.Repo,
  adapter: Ecto.Adapters.Postgres,
  ssl: false,
  url: database_url,
  pool_size: String.to_integer(System.get_env("POOL_SIZE") || "10")

config :partpicker, PartpickerWeb.OAuth.Discord,
  url: "https://miatapartpicker.gay/oauth/discord",
  client_id: discord_client_id,
  client_secret: discord_client_secret
